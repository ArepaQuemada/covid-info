{"version":3,"sources":["components/Header.js","components/Form.js","hooks/useFetch.js","components/BackdropLoader.js","components/MainChart.js","components/MainChartBuild.js","utils/buildDataSet.js","components/CountryInfoApi.js","utils/parseDate.js","components/StatCard.js","components/CardsContainer.js","components/BuildCards.js","components/CountryInfo.js","utils/extractData.js","components/CompareCountry.js","components/GlobalInfo.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","textAlign","drawerContainer","backgroundColor","height","link","textDecoration","color","palette","primary","dark","fontWeight","Header","classes","useState","openMenu","setOpenMenu","handleOpenMenu","Container","maxWidth","disableGutters","AppBar","position","Toolbar","className","IconButton","onClick","Typography","variant","Drawer","anchor","open","Box","display","justifyContent","width","Divider","menuName","route","map","item","index","m","p","key","to","Form","setCountryName","inputRef","useRef","mt","flexDirection","onSubmit","e","preventDefault","defaultValue","current","firstChild","control","mb","Autocomplete","options","countries","getOptionLabel","option","name","fullWidth","renderInput","params","TextField","label","placeholder","ref","Button","type","size","useFetch","url","setLoading","data","setData","useEffect","a","axios","get","console","log","undefined","fetchData","backdrop","zIndex","drawer","main","BackdropLoader","loading","Backdrop","CircularProgress","marginBottom","wrapper","border","padding","breakpoints","down","MainChart","dataset","MainChartBuild","datasetMainChart","labels","datasets","elem","borderColor","buildDataSet","buildData","status","dateFormat","Date","Cases","CountryInfoApi","countryName","globalElement","date","today","concat","fromDate","getDate","setDate","parsefromDate","parseDate","setStatus","confirmed","deaths","recovered","handleClickStatus","target","innerText","toLowerCase","secondary","success","getLabelsAndDataset","Breadcrumbs","Link","StatCard","title","stats","transition","transform","CardsContainer","slots","flexWrap","parseSlots","firstTitle","secondTitle","thirdTitle","firstStat","secondStat","thirdStat","BuildCards","titles","CountryInfo","global","window","localStorage","getItem","setItem","countryData","Countries","filter","Country","indexOf","length","NewConfirmed","NewDeaths","NewRecovered","getNews","TotalConfirmed","TotalDeaths","TotalRecovered","getTotals","CompareCountry","GlobalInfo","App","basename","path","exact-path","createMuiTheme","light","alert","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.1c02998c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, Drawer, Container, Divider, Box } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        textAlign: 'center',\r\n    },\r\n    drawerContainer: {\r\n        backgroundColor: \"#333333\",\r\n        height: '100%',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: theme.palette.primary.dark,\r\n        fontWeight: 'bolder'\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    const [openMenu, setOpenMenu] = useState(false);\r\n    const menuItems = [\r\n        {\r\n            menuName: 'Country Info',\r\n            route: '/'\r\n        },\r\n        {\r\n            menuName: 'Compare Countries',\r\n            route: '/compare-countries'\r\n        },\r\n        {\r\n            menuName: 'Global Info',\r\n            route: '/global-info'\r\n        }\r\n    ]\r\n\r\n    const handleOpenMenu = () => {\r\n        setOpenMenu(!openMenu);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth={false} disableGutters>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={classes.root}>\r\n                    <IconButton onClick={handleOpenMenu}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">Covid Info Charts</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                anchor=\"left\"\r\n                open={openMenu} >\r\n                <Container className={classes.drawerContainer}>\r\n                    <Box display=\"flex\" justifyContent=\"center\" width=\"100%\">\r\n                        <IconButton onClick={handleOpenMenu}>\r\n                            <ExitToAppIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    <Divider />\r\n                    {menuItems.map((item, index) => {\r\n                        return (\r\n                            <Box m={2} p={1} key={index}>\r\n                                <Link className={classes.link} to={`${item.route}`} onClick={handleOpenMenu}>\r\n                                    <Typography variant=\"body1\">{item.menuName}</Typography>\r\n                                </Link>\r\n                                <Divider />\r\n                            </Box>\r\n                        )\r\n                    })}\r\n                </Container>\r\n            </Drawer>\r\n        </Container>\r\n    )\r\n}","import React, { useRef } from 'react';\r\nimport countries from '../utils/countries.json';\r\nimport { TextField, Container, Box, Button, makeStyles } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nexport default function Form({ setCountryName }) {\r\n    const classes = useStyles();\r\n    const inputRef = useRef(null);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        const { current: { firstChild: { control: { defaultValue } } } } = inputRef;\r\n        setCountryName(defaultValue);\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <Box mt={4} height=\"80%\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n                <form onSubmit={handleClick}>\r\n                    <Box mb={2}>\r\n                        <Autocomplete\r\n                            options={countries}\r\n                            getOptionLabel={(option) => option.name}\r\n                            fullWidth\r\n                            renderInput={(params) =>\r\n                                <TextField\r\n                                    {...params}\r\n                                    label=\"Country name\"\r\n                                    placeholder=\"Type a country name\"\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    ref={inputRef}\r\n                                />}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1}>\r\n                        <Button type=\"submit\" color=\"primary\" variant=\"contained\" fullWidth size=\"large\">SEARCH</Button>\r\n                    </Box>\r\n                </form>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useFetch(url, setLoading) {\r\n    const [ data, setData ] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true)\r\n                const data = await axios.get(url);\r\n                setData(data.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n                setData(undefined);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [ url, setLoading ]);\r\n    return data;\r\n}","import React from 'react';\r\nimport { Backdrop, CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\n\r\nexport default function BackdropLoader({ loading }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Backdrop className={classes.backdrop} open={loading}>\r\n            <CircularProgress></CircularProgress>\r\n        </Backdrop>\r\n    )\r\n}","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { makeStyles, Container, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginBottom: '10px'\r\n    },\r\n    wrapper: {\r\n        border: `3px solid ${theme.palette.primary.dark}`,\r\n        padding: '20px',\r\n        [theme.breakpoints.down('md')]: {\r\n            padding: 0\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function MainChart({ dataset }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.root} disableGutters maxWidth=\"md\">\r\n            <Box className={classes.wrapper}>\r\n                <Line\r\n                    data={dataset}\r\n                />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport buildDataSet from '../utils/buildDataSet';\r\nimport MainChart from './MainChart';\r\n\r\nexport default function MainChartBuild({labels, datasets }) {\r\n\r\n    const datasetMainChart = buildDataSet(labels, datasets);\r\n\r\n    return (\r\n        <MainChart dataset={datasetMainChart}/>\r\n    );\r\n}\r\n","export default function buildDataSet(labels, datasets) {\r\n\r\n    return {\r\n        labels,\r\n        datasets: datasets.map(elem => {\r\n            return {\r\n                label: elem.label,\r\n                data: [...elem.data],\r\n                backgroundColor: elem.backgroundColor,\r\n                borderColor: elem.borderColor\r\n            }\r\n        })\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\r\nimport useFetch from '../hooks/useFetch';\r\nimport parseDate from '../utils/parseDate';\r\nimport BackdropLoader from './BackdropLoader';\r\nimport MainChartBuild from './MainChartBuild';\r\nimport dateFormat from 'dateformat';\r\n\r\nconst getLabelsAndDataset = (status, theme, confirmed, deaths, recovered) => {\r\n   switch (status) {\r\n      case 'confirmed': {\r\n         return buildData(status, confirmed, theme.palette.primary.main);\r\n      }\r\n      case 'deaths': {\r\n         return buildData(status, deaths, theme.palette.secondary.main);\r\n      }\r\n      case 'recovered': {\r\n         return buildData(status, recovered, theme.palette.success.main);\r\n      }\r\n      default: {\r\n         return null\r\n      }\r\n   }\r\n}\r\n\r\nconst buildData = (label, status, color) => {\r\n   const labels = status.map(elem => dateFormat(elem.Date, 'd, mmm'));\r\n   const datasets = [\r\n      {\r\n         label: label,\r\n         data: status.map(elem => elem.Cases),\r\n         backgroundColor: 'rgb(255,255,255,0.1)',\r\n         borderColor: color,\r\n      }\r\n   ];\r\n   return { labels, datasets };\r\n}\r\n\r\nexport default function CountryInfoApi({ theme, countryName, globalElement }) {\r\n   const { today, fromDate } = parseDate();\r\n   const [loading, setLoading] = useState();\r\n   const [status, setStatus] = useState('confirmed');\r\n\r\n   const confirmed = useFetch(`https://api.covid19api.com/total/country/${countryName}/status/confirmed?from=${fromDate}&to=${today}`, setLoading);\r\n   const deaths = useFetch(`https://api.covid19api.com/total/country/${countryName}/status/deaths?from=${fromDate}&to=${today}`, setLoading);\r\n   const recovered = useFetch(`https://api.covid19api.com/total/country/${countryName}/status/recovered?from=${fromDate}&to=${today}`, setLoading);\r\n\r\n   const handleClickStatus = (e) => {\r\n      setStatus(e.target.innerText.toLowerCase());\r\n   }\r\n\r\n   if (loading) {\r\n      return (\r\n         <BackdropLoader loading={loading} />\r\n      );\r\n   }\r\n\r\n   if (confirmed && deaths && recovered) {\r\n      const { labels, datasets } = getLabelsAndDataset(status, theme, confirmed, deaths, recovered);\r\n      \r\n      return (\r\n         <Box width=\"100%\">\r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n               <Breadcrumbs>\r\n                  <Link onClick={handleClickStatus}>\r\n                     <Typography variant=\"body1\" key=\"Confirmed\">Confirmed</Typography>\r\n                  </Link>\r\n                  <Link onClick={handleClickStatus}>\r\n                     <Typography variant=\"body1\" key=\"Recovered\">Recovered</Typography>\r\n                  </Link>\r\n                  <Link onClick={handleClickStatus}>\r\n                     <Typography variant=\"body1\" key=\"Deaths\">Deaths</Typography>\r\n                  </Link>\r\n               </Breadcrumbs>\r\n            </Box>\r\n            <MainChartBuild\r\n               labels={labels}\r\n               datasets={datasets}\r\n            />\r\n            {globalElement}\r\n         </Box>\r\n      )\r\n   }\r\n   return (\r\n      <>\r\n      </>\r\n   );\r\n}","import dateFormat from 'dateformat';\r\n\r\nexport default function useParseDate() {\r\n\r\n    const parseToday = (date) => dateFormat(date, \"yyyy-mm-dd\").concat('T00:00:00Z');\r\n\r\n    const parsefromDate = (date) => {\r\n        const fromDate = date.getDate() -31;\r\n        return dateFormat(new Date(date.setDate(fromDate)), \"yyyy-mm-dd\").concat('T00:00:00Z');\r\n    }\r\n\r\n    return {\r\n        today: parseToday(new Date()),\r\n        fromDate: parsefromDate(new Date())\r\n    }\r\n}","import React from 'react';\r\nimport { Box, Typography, makeStyles } from '@material-ui/core';\r\n\r\nexport default function StatCard({ title, stats, color }) {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            backgroundColor: color,\r\n            padding: '10px',\r\n            width: '31%',\r\n            marginBottom: '10px',\r\n            transition: '.2s',\r\n            [theme.breakpoints.down('sm')]: {\r\n                width: '100%'\r\n            },\r\n            '&:hover': {\r\n                transform: 'rotateY(30deg)'\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <Box className={classes.root} textAlign=\"center\">\r\n            <Typography variant=\"h4\">{stats}</Typography>\r\n            <Typography variant=\"h6\">{title}</Typography>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport StatCard from './StatCard';\r\n\r\nexport default function CardsContainer({ theme, slots }) {\r\n    if (slots) {\r\n        return (\r\n            <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\" flexWrap=\"wrap\">\r\n                {slots.map(elem => {\r\n                    return (\r\n                        <StatCard \r\n                            title={elem.title}\r\n                            stats={elem.stats}\r\n                            color={elem.backgroundColor}\r\n                            />\r\n                    )\r\n                })}\r\n            </Box>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport CardsCointainer from './CardsContainer';\r\n\r\nconst parseSlots = (firstTitle, secondTitle, thirdTitle, firstStat, secondStat, thirdStat, theme) => {\r\n    \r\n    return [\r\n        {\r\n            title: firstTitle,\r\n            stats: firstStat,\r\n            backgroundColor: theme.palette.primary.main\r\n        },\r\n        {\r\n            title: secondTitle,\r\n            stats: secondStat,\r\n            backgroundColor: theme.palette.secondary.main\r\n        },\r\n        {\r\n            title: thirdTitle,\r\n            stats: thirdStat,\r\n            backgroundColor: theme.palette.success.main\r\n        }\r\n    ]\r\n}\r\n\r\nexport default function BuildCards({ titles, stats, theme }) {\r\n    const slots = parseSlots(...titles, ...stats, theme);\r\n    return (\r\n        <>\r\n            <CardsCointainer slots={slots}/>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Form from './Form';\r\nimport CountryInfoApi from './CountryInfoApi';\r\nimport BuildCards from './BuildCards';\r\nimport { getTotals, getNews } from '../utils/extractData';\r\n\r\nexport default function CountryInfo({ theme, global }) {\r\n    const [countryName, setCountryName] = useState(window.localStorage.getItem('countryName') || '');\r\n    const titles = [\"New Confirmed\", \"New Deaths\", \"New Recovered\"];\r\n    let globalElement = <div></div>\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem('countryName', countryName);\r\n    }, [countryName]);\r\n\r\n    if (global && countryName) {\r\n        const countryData = global.Countries.filter(elem => {\r\n            return elem.Country.toLowerCase().indexOf(countryName.toLowerCase()) > -1\r\n        });\r\n        const stats = getNews(countryData);\r\n        const totals = getTotals(countryData);\r\n        globalElement = <BuildCards\r\n            titles={titles}\r\n            stats={stats}\r\n            theme={theme}\r\n        />\r\n    };\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Form\r\n                setCountryName={setCountryName}\r\n            />\r\n            { countryName ?\r\n                <CountryInfoApi\r\n                    countryName={countryName}\r\n                    theme={theme}\r\n                    globalElement={globalElement}\r\n                /> : <> </>}\r\n        </Container>\r\n    )\r\n}","export const getTotals = (countryData) => {\r\n    if (countryData && countryData.length > 0) {\r\n        const [{ TotalConfirmed, TotalDeaths, TotalRecovered }] = countryData || {};\r\n        return [TotalConfirmed, TotalDeaths, TotalRecovered];\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const getNews = (countryData) => {\r\n    if (countryData && countryData.length > 0) {\r\n        const [{ NewConfirmed, NewDeaths, NewRecovered }] = countryData;\r\n        return [NewConfirmed, NewDeaths, NewRecovered];\r\n    }\r\n    return null\r\n}","import React from 'react';\r\n\r\nexport default function CompareCountry() {\r\n    return (\r\n        <>\r\n            CompareCountry\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function GlobalInfo({ global }) {\r\n    \r\n    return (\r\n        <>\r\n            GlobalInfo\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport CountryInfo from './components/CountryInfo';\r\nimport CompareCountry from './components/CompareCountry';\r\nimport GloblInfo from './components/GlobalInfo';\r\nimport useFetch from './hooks/useFetch';\r\nimport BackdropLoader from './components/BackdropLoader';\r\n\r\nexport default function App({ theme }) {\r\n   const [ loading, setLoading ] = useState();\r\n   const global = useFetch('https://api.covid19api.com/summary', setLoading); \r\n   \r\n   if (loading) {\r\n      return (\r\n         <BackdropLoader loading={loading} />\r\n      )\r\n   }\r\n\r\n   return (\r\n      <Container disableGutters maxWidth={false}>\r\n         <Router basename=\"covid-info\">\r\n            <Header />\r\n            <Switch>\r\n               <Route path=\"/compare-countries\">\r\n                  <CompareCountry theme={theme} />   \r\n               </Route>\r\n               <Route path=\"/global-info\">\r\n                  <GloblInfo theme={theme} />\r\n               </Route>\r\n               <Route exact-path=\"/\">\r\n                  <CountryInfo theme={theme} global={global} />\r\n               </Route>\r\n            </Switch>\r\n         </Router>\r\n      </Container>\r\n   );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#80d8ff',\r\n      dark: '#49a7cc',\r\n      light: '#b5ffff'\r\n    },\r\n    secondary: {\r\n      main: '#ff1744',\r\n      dark: '#c4001d',\r\n      light: '#ff616f'\r\n    },\r\n    alert: {\r\n      main: '#FEEA3B'\r\n    }\r\n  }\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App theme={theme}/>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}