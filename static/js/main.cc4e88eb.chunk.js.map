{"version":3,"sources":["components/Header.js","components/Form.js","hooks/useFetch.js","components/BackdropLoader.js","utils/buildDataSet.js","components/MainChart.js","components/MainChartBuild.js","components/CountryInfoApi.js","utils/parseDate.js","components/StatCard.js","components/CardsContainer.js","components/BuildCards.js","utils/extractData.js","components/MainDoughnut.js","components/MainDoughnutBuild.js","components/MainBar.js","components/MainBarBuild.js","components/CountryInfo.js","components/CompareCountry.js","components/GlobalInfo.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","textAlign","drawerContainer","backgroundColor","height","link","textDecoration","color","palette","primary","dark","fontWeight","Header","classes","useState","openMenu","setOpenMenu","handleOpenMenu","Container","maxWidth","disableGutters","AppBar","position","Toolbar","className","IconButton","onClick","Typography","variant","Drawer","anchor","open","Box","display","justifyContent","width","Divider","menuName","route","map","item","index","m","p","key","to","Form","setCountryName","inputRef","useRef","mt","flexDirection","onSubmit","e","preventDefault","defaultValue","current","firstChild","control","mb","Autocomplete","options","countries","getOptionLabel","option","name","fullWidth","renderInput","params","TextField","label","placeholder","ref","Button","type","size","useFetch","url","setLoading","data","setData","useEffect","unmounted","a","axios","get","console","log","undefined","fetchData","backdrop","zIndex","drawer","main","BackdropLoader","loading","Backdrop","CircularProgress","buildDataSet","labels","datasets","elem","borderColor","marginBottom","wrapper","border","padding","breakpoints","down","MainChart","dataset","MainChartBuild","datasetMainChart","buildData","status","dateFormat","Date","Cases","CountryInfoApi","countryName","globalElement","date","today","concat","fromDate","getDate","setDate","parsefromDate","parseDate","setStatus","countryData","handleClickStatus","target","innerText","toLowerCase","secondary","success","getLabelsAndDataset","Breadcrumbs","Link","StatCard","title","stats","transition","transform","CardsContainer","slots","flexWrap","parseSlots","firstTitle","secondTitle","thirdTitle","firstStat","secondStat","thirdStat","BuildCards","titles","up","MainDoughnut","MainDoughnutBuild","datasetMainDoughnut","MainBar","MainBarBuild","datasetMainBar","CountryInfo","global","window","localStorage","getItem","countryInfoApiElement","setItem","doughnutThemes","Countries","find","Country","indexOf","NewConfirmed","NewDeaths","NewRecovered","getNews","totals","TotalConfirmed","TotalDeaths","TotalRecovered","getTotals","percent","total","reduce","acum","Math","round","getPercentTotals","themes","datasetTotalDoughnut","datasetPercentDoughnut","text","fontSize","buildGlobalElement","CompareCountry","GlobalInfo","App","basename","path","exact-path","createMuiTheme","light","alert","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.cc4e88eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, Drawer, Container, Divider, Box } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        textAlign: 'center',\r\n    },\r\n    drawerContainer: {\r\n        backgroundColor: \"#333333\",\r\n        height: '100%',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: theme.palette.primary.dark,\r\n        fontWeight: 'bolder'\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    const [openMenu, setOpenMenu] = useState(false);\r\n    const menuItems = [\r\n        {\r\n            menuName: 'Country Info',\r\n            route: '/'\r\n        },\r\n        {\r\n            menuName: 'Compare Countries',\r\n            route: '/compare-countries'\r\n        },\r\n        {\r\n            menuName: 'Global Info',\r\n            route: '/global-info'\r\n        }\r\n    ]\r\n\r\n    const handleOpenMenu = () => {\r\n        setOpenMenu(!openMenu);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth={false} disableGutters>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={classes.root}>\r\n                    <IconButton onClick={handleOpenMenu}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">Covid Info Charts</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                anchor=\"left\"\r\n                open={openMenu} >\r\n                <Container className={classes.drawerContainer}>\r\n                    <Box display=\"flex\" justifyContent=\"center\" width=\"100%\">\r\n                        <IconButton onClick={handleOpenMenu}>\r\n                            <ExitToAppIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    <Divider />\r\n                    {menuItems.map((item, index) => {\r\n                        return (\r\n                            <Box m={2} p={1} key={index}>\r\n                                <Link className={classes.link} to={`${item.route}`} onClick={handleOpenMenu}>\r\n                                    <Typography variant=\"body1\">{item.menuName}</Typography>\r\n                                </Link>\r\n                                <Divider />\r\n                            </Box>\r\n                        )\r\n                    })}\r\n                </Container>\r\n            </Drawer>\r\n        </Container>\r\n    )\r\n}","import React, { useRef } from 'react';\r\nimport countries from '../utils/countries.json';\r\nimport { TextField, Container, Box, Button, makeStyles } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nexport default function Form({ setCountryName }) {\r\n    const classes = useStyles();\r\n    const inputRef = useRef(null);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        const { current: { firstChild: { control: { defaultValue } } } } = inputRef;\r\n        setCountryName(defaultValue);\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <Box mt={4} height=\"80%\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n                <form onSubmit={handleClick}>\r\n                    <Box mb={2}>\r\n                        <Autocomplete\r\n                            options={countries}\r\n                            getOptionLabel={(option) => option.name}\r\n                            fullWidth\r\n                            renderInput={(params) =>\r\n                                <TextField\r\n                                    {...params}\r\n                                    label=\"Country name\"\r\n                                    placeholder=\"Type a country name\"\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    ref={inputRef}\r\n                                />}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1}>\r\n                        <Button type=\"submit\" color=\"primary\" variant=\"contained\" fullWidth size=\"large\">SEARCH</Button>\r\n                    </Box>\r\n                </form>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useFetch(url, setLoading) {\r\n    const [ data, setData ] = useState();\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        if (!unmounted) {\r\n            const fetchData = async () => {\r\n                try {\r\n                    setLoading(true)\r\n                    const data = await axios.get(url);\r\n                    setData(data.data);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                    setData(undefined);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n            fetchData();\r\n        }\r\n        return () => {\r\n            unmounted = true;\r\n        }\r\n    }, [ url, setLoading ]);\r\n    return data;\r\n}","import React from 'react';\r\nimport { Backdrop, CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\n\r\nexport default function BackdropLoader({ loading }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Backdrop className={classes.backdrop} open={loading}>\r\n            <CircularProgress></CircularProgress>\r\n        </Backdrop>\r\n    )\r\n}","export default function buildDataSet(labels, datasets) {\r\n    \r\n    return {\r\n        labels,\r\n        datasets: datasets.map(elem => {\r\n            return {\r\n                label: elem.label,\r\n                data: [...elem.data],\r\n                backgroundColor: elem.backgroundColor,\r\n                borderColor: elem.borderColor,\r\n            }\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { makeStyles, Container, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginBottom: '10px'\r\n    },\r\n    wrapper: {\r\n        border: `3px solid ${theme.palette.primary.dark}`,\r\n        padding: '20px',\r\n        [theme.breakpoints.down('md')]: {\r\n            padding: 0\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function MainChart({ dataset }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.root} disableGutters maxWidth=\"md\">\r\n            <Box className={classes.wrapper}>\r\n                <Line\r\n                    data={dataset}\r\n                />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport buildDataSet from '../utils/buildDataSet';\r\nimport MainChart from './MainChart';\r\n\r\nexport default function MainChartBuild({ labels, datasets }) {\r\n\r\n    const datasetMainChart = buildDataSet(labels, datasets);\r\n\r\n    return (\r\n        <MainChart dataset={datasetMainChart}/>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\r\nimport useFetch from '../hooks/useFetch';\r\nimport parseDate from '../utils/parseDate';\r\nimport BackdropLoader from './BackdropLoader';\r\nimport MainChartBuild from './MainChartBuild';\r\nimport dateFormat from 'dateformat';\r\n\r\nconst getLabelsAndDataset = (status, theme, countryData) => {\r\n   let color;\r\n   switch (status) {\r\n      case 'deaths': {\r\n         color = theme.palette.secondary.main;\r\n         break\r\n      }\r\n      case 'recovered': {\r\n         color = theme.palette.success.main;\r\n         break;\r\n      }\r\n      default: {\r\n         color = theme.palette.primary.main;\r\n      }\r\n   }\r\n   return buildData(status, countryData, color)\r\n}\r\n\r\nconst buildData = (label, status, color) => {\r\n   const labels = status.map(elem => dateFormat(elem.Date, 'd, mmm'));\r\n   const datasets = [\r\n      {\r\n         label: label,\r\n         data: status.map(elem => elem.Cases),\r\n         backgroundColor: 'rgb(255,255,255,0.1)',\r\n         borderColor: color,\r\n      }\r\n   ];\r\n   return { labels, datasets };\r\n}\r\n\r\nexport default function CountryInfoApi({ theme, countryName, globalElement }) {\r\n   const { today, fromDate } = parseDate();\r\n   const [loading, setLoading] = useState();\r\n   const [status, setStatus] = useState('confirmed');\r\n\r\n   const countryData = useFetch(`https://api.covid19api.com/total/country/${countryName}/status/${status}?from=${fromDate}&to=${today}`, setLoading);\r\n\r\n   const handleClickStatus = (e) => {\r\n      setStatus(e.target.innerText.toLowerCase());\r\n   }\r\n\r\n   if (loading) {\r\n      return (\r\n         <BackdropLoader loading={loading} />\r\n      );\r\n   }\r\n\r\n   if (countryData) {\r\n      const { labels, datasets } = getLabelsAndDataset(status, theme, countryData);\r\n\r\n      return (\r\n         <Box width=\"100%\">\r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n               <Breadcrumbs>\r\n                  <Link onClick={handleClickStatus}>\r\n                     <Typography variant=\"body1\" key=\"Confirmed\">Confirmed</Typography>\r\n                  </Link>\r\n                  <Link onClick={handleClickStatus}>\r\n                     <Typography variant=\"body1\" key=\"Recovered\">Recovered</Typography>\r\n                  </Link>\r\n                  <Link onClick={handleClickStatus}>\r\n                     <Typography variant=\"body1\" key=\"Deaths\">Deaths</Typography>\r\n                  </Link>\r\n               </Breadcrumbs>\r\n            </Box>\r\n            <MainChartBuild\r\n               labels={labels}\r\n               datasets={datasets}\r\n            />\r\n            {globalElement}\r\n         </Box>\r\n      );\r\n   }\r\n   return (\r\n      <>\r\n      </>\r\n   );\r\n}","import dateFormat from 'dateformat';\r\n\r\nexport default function useParseDate() {\r\n\r\n    const parseToday = (date) => dateFormat(date, \"yyyy-mm-dd\").concat('T00:00:00Z');\r\n\r\n    const parsefromDate = (date) => {\r\n        const fromDate = date.getDate() -31;\r\n        return dateFormat(new Date(date.setDate(fromDate)), \"yyyy-mm-dd\").concat('T00:00:00Z');\r\n    }\r\n\r\n    return {\r\n        today: parseToday(new Date()),\r\n        fromDate: parsefromDate(new Date())\r\n    }\r\n}","import React from 'react';\r\nimport { Box, Typography, makeStyles } from '@material-ui/core';\r\n\r\nexport default function StatCard({ title, stats, color }) {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            backgroundColor: color,\r\n            padding: '10px',\r\n            width: '31%',\r\n            marginBottom: '10px',\r\n            transition: '.2s',\r\n            [theme.breakpoints.down('sm')]: {\r\n                width: '100%'\r\n            },\r\n            '&:hover': {\r\n                transform: 'rotateY(30deg)'\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <Box className={classes.root} textAlign=\"center\">\r\n            <Typography variant=\"h4\">{stats}</Typography>\r\n            <Typography variant=\"h6\">{title}</Typography>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport StatCard from './StatCard';\r\n\r\nexport default function CardsContainer({ theme, slots }) {\r\n    if (slots) {\r\n        return (\r\n            <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\" flexWrap=\"wrap\">\r\n                {slots.map(elem => {\r\n                    return (\r\n                        <StatCard \r\n                            title={elem.title}\r\n                            stats={elem.stats}\r\n                            color={elem.backgroundColor}\r\n                            />\r\n                    )\r\n                })}\r\n            </Box>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport CardsCointainer from './CardsContainer';\r\n\r\nconst parseSlots = (firstTitle, secondTitle, thirdTitle, firstStat, secondStat, thirdStat, theme) => {\r\n    \r\n    return [\r\n        {\r\n            title: firstTitle,\r\n            stats: firstStat,\r\n            backgroundColor: theme.palette.primary.main\r\n        },\r\n        {\r\n            title: secondTitle,\r\n            stats: secondStat,\r\n            backgroundColor: theme.palette.secondary.main\r\n        },\r\n        {\r\n            title: thirdTitle,\r\n            stats: thirdStat,\r\n            backgroundColor: theme.palette.success.main\r\n        }\r\n    ]\r\n}\r\n\r\nexport default function BuildCards({ titles, stats, theme }) {\r\n    const slots = parseSlots(...titles, ...stats, theme);\r\n    return (\r\n        <>\r\n            <CardsCointainer slots={slots}/>\r\n        </>\r\n    )\r\n}","export const getTotals = (countryData) => {\r\n    if (countryData) {\r\n        const { TotalConfirmed, TotalDeaths, TotalRecovered } = countryData || {};\r\n        return [TotalConfirmed, TotalDeaths, TotalRecovered];\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const getNews = (countryData) => {\r\n    if (countryData) {\r\n        const { NewConfirmed, NewDeaths, NewRecovered } = countryData;\r\n        return [NewConfirmed, NewDeaths, NewRecovered];\r\n    }\r\n    return null\r\n}\r\n\r\nexport const getPercentTotals = (totals) => {\r\n    if (totals) {\r\n        const total = totals.reduce((acum, elem) => acum + elem);\r\n        return totals.map(elem => Math.round(elem / total * 100));\r\n    }\r\n}","import React from 'react';\r\nimport { Container, makeStyles, Typography } from '@material-ui/core';\r\nimport { Doughnut } from 'react-chartjs-2'\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    root: {\r\n        marginBottom: '10px',\r\n        border: `3px solid ${theme.palette.primary.main}`,\r\n        textAlign: \"center\",\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '49%'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function MainDoughnut({ dataset, options }) {\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.root} maxWidth=\"sm\" disableGutters>\r\n            <Doughnut \r\n                data={dataset}\r\n                options={options} />\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport buildDataSet from '../utils/buildDataSet';\r\nimport MainDoughnut from './MainDoughnut';\r\n\r\nexport default function MainDoughnutBuild({ labels, datasets, options }) {\r\n\r\n    const datasetMainDoughnut = buildDataSet(labels, datasets);\r\n    \r\n    return (\r\n        <MainDoughnut \r\n            dataset={datasetMainDoughnut}\r\n            options={options}\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport { Container, makeStyles } from '@material-ui/core';\r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    root: {\r\n        marginBottom: '10px',\r\n        border: `3px solid ${theme.palette.primary.main}`,\r\n        textAlign: \"center\",\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '49%'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function MainBar({ dataset, options }) {\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.root} maxWidth=\"sm\" disableGutters>\r\n            <Bar \r\n                data={dataset}\r\n                options={options} />\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport buildDataSet from '../utils/buildDataSet';\r\nimport MainBar from './MainBar';\r\n\r\nexport default function MainBarBuild({ labels, datasets, options }) {\r\n    \r\n    const datasetMainBar = buildDataSet(labels, datasets);\r\n    \r\n    return (\r\n        <MainBar \r\n            dataset={datasetMainBar}\r\n            options={options}\r\n        />\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Container, Box } from '@material-ui/core';\r\nimport Form from './Form';\r\nimport CountryInfoApi from './CountryInfoApi';\r\nimport BuildCards from './BuildCards';\r\nimport { getTotals, getNews, getPercentTotals } from '../utils/extractData';\r\nimport MainDoughnutBuild from './MainDoughnutBuild';\r\nimport MainBarBuild from './MainBarBuild';\r\n\r\nconst buildGlobalElement = (titles, stats, theme, totals, percent, themes) => {\r\n    const datasetTotalDoughnut = [\r\n        {\r\n            data: totals,\r\n            backgroundColor: themes\r\n        },\r\n    ]\r\n\r\n    const datasetPercentDoughnut = [\r\n        {\r\n            data: percent,\r\n            backgroundColor: themes\r\n        },\r\n    ]\r\n\r\n    const optionsTotal = {\r\n        title: {\r\n            display: true,\r\n            text: 'Totals',\r\n            fontSize: 18\r\n        }\r\n    }\r\n\r\n    const optionsPercent = {\r\n        title: {\r\n            display: true,\r\n            text: 'Percent of Total',\r\n            fontSize: 18\r\n        }\r\n    }\r\n    return (\r\n        <Box>\r\n            <BuildCards\r\n                titles={titles.map(elem => ' New ' + elem)}\r\n                stats={stats}\r\n                theme={theme}\r\n            />\r\n            <Box width=\"100%\" display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-evenly\">\r\n                <MainDoughnutBuild\r\n                    labels={titles}\r\n                    datasets={datasetTotalDoughnut}\r\n                    options={optionsTotal}\r\n                />\r\n                <MainBarBuild\r\n                    labels={titles}\r\n                    datasets={datasetPercentDoughnut}\r\n                    title=\"Percent\"\r\n                    options={optionsPercent}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default function CountryInfo({ theme, global }) {\r\n    const [countryName, setCountryName] = useState(window.localStorage.getItem('countryName') || '');\r\n    const titles = [\"Confirmed\", \"Deaths\", \"Recovered\"];\r\n    let globalElement = <div></div>\r\n    let countryInfoApiElement = <div></div>\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        if (!unmounted) {\r\n            window.localStorage.setItem('countryName', countryName);\r\n        }\r\n        return () => {\r\n            unmounted = true;\r\n        }\r\n    }, [countryName]);\r\n\r\n    if (global && countryName) {\r\n        const doughnutThemes = [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.success.main];\r\n        const countryData = global.Countries.find(elem => {\r\n            return elem.Country.toLowerCase().indexOf(countryName.toLowerCase()) > -1\r\n        });\r\n        const stats = getNews(countryData);\r\n        const totals = getTotals(countryData);\r\n        const percent = getPercentTotals(totals)\r\n        globalElement = countryData ? buildGlobalElement(titles, stats, theme, totals, percent, doughnutThemes) : <div></div>\r\n        countryInfoApiElement = <CountryInfoApi\r\n            countryName={countryName}\r\n            theme={theme}\r\n            globalElement={globalElement} />\r\n    };\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Form\r\n                setCountryName={setCountryName} />\r\n            { countryInfoApiElement}\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function CompareCountry() {\r\n    return (\r\n        <>\r\n            CompareCountry\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function GlobalInfo({ global }) {\r\n    \r\n    return (\r\n        <>\r\n            GlobalInfo\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport CountryInfo from './components/CountryInfo';\r\nimport CompareCountry from './components/CompareCountry';\r\nimport GloblInfo from './components/GlobalInfo';\r\nimport useFetch from './hooks/useFetch';\r\nimport BackdropLoader from './components/BackdropLoader';\r\n\r\nexport default function App({ theme }) {\r\n   const [ loading, setLoading ] = useState();\r\n   const global = useFetch('https://api.covid19api.com/summary', setLoading); \r\n   \r\n   if (loading) {\r\n      return (\r\n         <BackdropLoader loading={loading} />\r\n      )\r\n   }\r\n\r\n   return (\r\n      <Container disableGutters maxWidth={false}>\r\n         <Router basename=\"covid-info\">\r\n            <Header />\r\n            <Switch>\r\n               <Route path=\"/compare-countries\">\r\n                  <CompareCountry theme={theme} />   \r\n               </Route>\r\n               <Route path=\"/global-info\">\r\n                  <GloblInfo theme={theme} />\r\n               </Route>\r\n               <Route exact-path=\"/\">\r\n                  <CountryInfo theme={theme} global={global} />\r\n               </Route>\r\n            </Switch>\r\n         </Router>\r\n      </Container>\r\n   );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#80d8ff',\r\n      dark: '#49a7cc',\r\n      light: '#b5ffff'\r\n    },\r\n    secondary: {\r\n      main: '#ff1744',\r\n      dark: '#c4001d',\r\n      light: '#ff616f'\r\n    },\r\n    alert: {\r\n      main: '#FEEA3B'\r\n    }\r\n  }\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App theme={theme}/>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}